name: Release

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - run: python -m pip install poetry

      - name: Install Dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y --no-install-recommends build-essential gcc python3-dev libpq-dev libmemcached-dev zlib1g-dev
          poetry install -E aws -E cache -E pgsql -E google

      - name: Set version
        id: version
        env:
          PYTHONPATH: .
        run: |
          from version import update_version
          print('::set-output name=version::%s' % update_version())
        shell: python

      - name: Run tests
        id: test
        env:
          SECRET_KEY: secret
          DB_ENGINE: django.db.backends.sqlite3
          DB_NAME: /tmp/test.sqlite3
        run: |
          poetry run pytest

      - name: Build Wheel
        run: |
          poetry build --format wheel

      - name: Upload wheel
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_name: thepoint-${{ steps.version.outputs.version }}-py3-none-any.whl
          asset_path: dist/thepoint-{{ steps.version.outputs.version }}-py3-none-any.whl
          asset_content_type: application/zip
