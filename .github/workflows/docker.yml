name: Docker Image

on:
  push:
    branches:
      - master
      - testing
    tags:
      - '**'
    paths-ignore:
      - '.github/**'
      - '.gitignore'
      - 'docker-compose.yml'
  schedule:
    - cron: '30 18 * * 5'
  workflow_dispatch:

env:
  IMAGE_NAME: thepoint

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - run: python -m pip install tomlkit gitpython semantic_version

      - name: Set version
        id: version
        env:
          PYTHONPATH: .
        run: |
          from version import update_version
          print('::set-output name=version::%s' % update_version())
        shell: python

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Build image
        run: |
          BRANCH="$(git branch --show-current)"
          if [ "$BRANCH" = "master" ]; then
            UPPERROOM='--build-arg upperroom_version=latest'
          elif [ "$BRANCH" = "testing" ]; then
            UPPERROOM='--build-arg upperroom_version=testing'
          fi
          docker build . --file Dockerfile --tag image $UPPERROOM --build-arg version="${{ steps.version.outputs.version }}" --build-arg build_date="$(date -u +'%Y-%m-%dT%H:%M:%SZ')"

      - name: Push images
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          BRANCH="$(git branch --show-current)"
          if [ "$BRANCH" = "master" ]; then
              docker tag image $IMAGE_ID:${{ steps.version.outputs.version }}
              docker push $IMAGE_ID:${{ steps.version.outputs.version }}

              docker tag image $IMAGE_ID:latest
              docker push $IMAGE_ID:latest
          elif [ "$BRANCH" = "testing" ]; then
              docker tag image $IMAGE_ID:$BRANCH
              docker push $IMAGE_ID:$BRANCH
          fi
